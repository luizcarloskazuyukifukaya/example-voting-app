# Application YAML for Argo CD
# Source: https://github.com/luizcarloskazuyukifukaya/example-voting-app.git
# Target: luiz-devops-argcd (project: luiz-devops-cicd, zone: us-central1-c)

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: example-argo-application
  # You'll usually want to add your resources to the argocd namespace.
  namespace: argocd
  # Add labels to your application object.
  labels:
    name: example-argo-application
spec:
  # The project the application belongs to.
  project: default

  # Source of the application manifests
  source:
    repoURL: https://github.com/luizcarloskazuyukifukaya/example-voting-app.git # Can point to either a Helm chart repo or a git repo.
    #targetRevision: HEAD # Normal case where the default branch (main usually) is to be used
    targetRevision: argocd  # For Helm, this refers to the chart version. Use targetRevision to specify the branch you require if source is a Git repo URL.
    path: k8s-specifications  # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.

    # helm specific config
    # https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/application.yaml
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/application.yaml
    # For helm, the above URL should be a great reference
  
  # Destination cluster and namespace to deploy the application
  destination:
    # cluster API URL
    server: https://kubernetes.default.svc
    # or cluster name
    # name: in-cluster
    # The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    namespace: examples # dedicated ns for the example app

  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions:     # Sync options which modifies sync behavior
    - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
    - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
    - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
    - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation

